{
  "__inputs": [
    {
      "name": "DS_AGGREGATOR",
      "label": "AggreGator",
      "description": "",
      "type": "datasource",
      "pluginId": "postgres",
      "pluginName": "PostgreSQL"
    },
    {
      "name": "VAR_EPOCH",
      "type": "constant",
      "label": "epoch",
      "value": "1483228800",
      "description": ""
    }
  ],
  "__elements": [],
  "__requires": [
    {
      "type": "panel",
      "id": "bargauge",
      "name": "Bar gauge",
      "version": ""
    },
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "8.3.3"
    },
    {
      "type": "panel",
      "id": "piechart",
      "name": "Pie chart",
      "version": ""
    },
    {
      "type": "datasource",
      "id": "postgres",
      "name": "PostgreSQL",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "stat",
      "name": "Stat",
      "version": ""
    },
    {
      "type": "panel",
      "id": "table",
      "name": "Table",
      "version": ""
    },
    {
      "type": "panel",
      "id": "timeseries",
      "name": "Time series",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": null,
  "iteration": 1645931235410,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 6,
      "panels": [],
      "title": "Snapshot",
      "type": "row"
    },
    {
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisGridShow": true,
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "bars",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 10,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "net"
            },
            "properties": [
              {
                "id": "custom.drawStyle",
                "value": "line"
              },
              {
                "id": "custom.fillOpacity",
                "value": 0
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "date"
            },
            "properties": [
              {
                "id": "unit",
                "value": "time:YYYY-MM-DD"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 9,
        "x": 0,
        "y": 1
      },
      "id": 20,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "right"
        },
        "tooltip": {
          "mode": "multi"
        }
      },
      "pluginVersion": "8.3.3",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_AGGREGATOR}"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT date, sum(adjusted_close), -sum(adjusted_close) as negative, 0.5*sum(adjusted_close) as net\nFROM market\nWHERE\n  $__timeFilter(date)\ngroup by date\norder by date",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "price"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "market",
          "timeColumn": "\"timestamp\"",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "ðŸš§[WIP] Net WorthðŸš§",
      "type": "timeseries"
    },
    {
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "percentage",
            "steps": [
              {
                "color": "red",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 10
              },
              {
                "color": "green",
                "value": 45
              },
              {
                "color": "super-light-blue",
                "value": 100
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "savings"
            },
            "properties": [
              {
                "id": "max",
                "value": 250000
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "spdr"
            },
            "properties": [
              {
                "id": "max",
                "value": 500000
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "reit"
            },
            "properties": [
              {
                "id": "max",
                "value": 750000
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 4,
        "x": 9,
        "y": 1
      },
      "id": 24,
      "options": {
        "displayMode": "gradient",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": true
        },
        "showUnfilled": true
      },
      "pluginVersion": "8.3.3",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_AGGREGATOR}"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select 'Savings' as fund, 250000.00 as savings",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "price"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "market",
          "timeColumn": "\"timestamp\"",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_AGGREGATOR}"
          },
          "format": "table",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select 'SPDR' as fund, 500000.00 as spdr",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "price"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "market",
          "timeColumn": "\"timestamp\"",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_AGGREGATOR}"
          },
          "format": "table",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select 'REIT' as fund, 750000.00 as reit",
          "refId": "C",
          "select": [
            [
              {
                "params": [
                  "price"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "market",
          "timeColumn": "\"timestamp\"",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "ðŸš§[WIP] äº”æœˆé›¨ðŸš§",
      "type": "bargauge"
    },
    {
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "percentage",
            "steps": [
              {
                "color": "red",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 10
              },
              {
                "color": "green",
                "value": 45
              },
              {
                "color": "super-light-blue",
                "value": 100
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "savings"
            },
            "properties": [
              {
                "id": "max",
                "value": 250000
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "spdr"
            },
            "properties": [
              {
                "id": "max",
                "value": 500000
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "reit"
            },
            "properties": [
              {
                "id": "max",
                "value": 750000
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 4,
        "x": 13,
        "y": 1
      },
      "id": 27,
      "options": {
        "displayMode": "gradient",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": true
        },
        "showUnfilled": true
      },
      "pluginVersion": "8.3.3",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_AGGREGATOR}"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select 'Bills' as fund, 250000.00 as savings",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "price"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "market",
          "timeColumn": "\"timestamp\"",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_AGGREGATOR}"
          },
          "format": "table",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select 'Stuff' as fund, 500000.00 as spdr",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "price"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "market",
          "timeColumn": "\"timestamp\"",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_AGGREGATOR}"
          },
          "format": "table",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select 'Misc' as fund, 750000.00 as reit",
          "refId": "C",
          "select": [
            [
              {
                "params": [
                  "price"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "market",
          "timeColumn": "\"timestamp\"",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "ðŸš§[WIP] Buckets?ðŸš§",
      "type": "bargauge"
    },
    {
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 7,
        "x": 17,
        "y": 1
      },
      "id": 26,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "8.3.3",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_AGGREGATOR}"
          },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  date AS \"time\",\n  adjusted_close\nFROM market\nWHERE\n  $__timeFilter(date)\nORDER BY date",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "price"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "market",
          "timeColumn": "\"timestamp\"",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "ðŸš§[WIP] Balance SummaryðŸš§",
      "type": "table"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 9
      },
      "id": 4,
      "panels": [],
      "title": "Portfolio",
      "type": "row"
    },
    {
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "decimals": 3,
          "links": [
            {
              "title": "",
              "url": "https://finance.yahoo.com/quote/${__data.fields.symbol}"
            }
          ],
          "mappings": [],
          "unit": "currencyUSD"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 0,
        "y": 10
      },
      "id": 14,
      "options": {
        "displayLabels": [],
        "legend": {
          "displayMode": "table",
          "placement": "right",
          "values": [
            "percent"
          ]
        },
        "pieType": "pie",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": true
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_AGGREGATOR}"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select shares.symbol, quantity * adjusted_close\r\nfrom (\r\n  select symbol, quantity\r\n  from (\r\n    select symbol, SUM(quantity) as quantity\r\n    from trades\r\n    where date < '${__to:date}'\r\n    group by symbol\r\n  ) as totals\r\n  where quantity > 0\r\n) as shares\r\njoin (\r\n  select distinct on (symbol) symbol, adjusted_close\r\n  from market\r\n  where date < '${__to:date}'\r\n  order by symbol, date DESC\r\n) as current_prices\r\non shares.symbol = current_prices.symbol",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "price"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "market",
          "timeColumn": "\"timestamp\"",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Allocations",
      "type": "piechart"
    },
    {
      "description": "Amount invested vs Portfolio Value",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisGridShow": false,
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 37,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 3,
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "currencyUSD"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Amount Invested"
            },
            "properties": [
              {
                "id": "custom.lineInterpolation",
                "value": "stepAfter"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "semi-dark-red",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.fillOpacity",
                "value": 6
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Portfolio Value"
            },
            "properties": [
              {
                "id": "custom.lineInterpolation",
                "value": "linear"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 6,
        "y": 10
      },
      "id": 2,
      "options": {
        "legend": {
          "calcs": [
            "last"
          ],
          "displayMode": "hidden",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_AGGREGATOR}"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select time, amount as \"Amount Invested\"\r\nfrom (\r\n    select time_bucket_gapfill('1 day', date) as time, locf(max(value)) as amount\r\n    from (\r\n      select date, SUM(invested) over (order by date) as value\r\n      from (\r\n        select trades.date, SUM(trades.quantity * lots.price) as invested\r\n        from trades\r\n        join lots on lots.id=trades.lot_id\r\n        where trades.date < '${__to:date}'\r\n        group by trades.date\r\n        order by trades.date\r\n      ) as invested_over_time\r\n    ) as cumulative\r\n    where date between '${epoch:date}' and '${__to:date}'\r\n    group by time\r\n    order by time\r\n) as history\r\nwhere $__timeFilter(time)",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "price"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "market",
          "timeColumn": "\"timestamp\"",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_AGGREGATOR}"
          },
          "format": "time_series",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select time, value as \"Portfolio Value\"\r\nfrom (\r\n    select time, sum(qty * price) as value\r\n    from (\r\n        select time_bucket_gapfill('1 day', date) as time, symbol, locf(min(qty)) as qty\r\n        from (\r\n            select date, symbol, SUM(quantity) over (partition by symbol order by date) as qty\r\n            from trades\r\n            where date < '${__to:date}'\r\n            order by date\r\n        ) as cumulatives\r\n        where date between '${epoch:date}' and '${__to:date}'\r\n        group by time, symbol\r\n        order by time\r\n    ) as assets\r\n    join (\r\n      select time_bucket_gapfill('1 day', date) as gapfill_date, symbol, locf(min(adjusted_close)) as price\r\n      from market\r\n      where date between '${epoch:date}' and '${__to:date}'\r\n      group by gapfill_date, symbol\r\n      order by gapfill_date\r\n    ) as extended_market\r\n    on assets.symbol=extended_market.symbol and assets.time=extended_market.gapfill_date\r\n    where qty is not null\r\n    group by time\r\n    order by time\r\n) as history\r\nwhere $__timeFilter(time)",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "price"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "market",
          "timeColumn": "\"timestamp\"",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Portfolio Performance",
      "type": "timeseries"
    },
    {
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red",
                "value": null
              },
              {
                "color": "blue",
                "value": 0
              },
              {
                "color": "green",
                "value": 0.01
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "percent_gl"
            },
            "properties": [
              {
                "id": "unit",
                "value": "percentunit"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "total_gl"
            },
            "properties": [
              {
                "id": "unit",
                "value": "currencyUSD"
              },
              {
                "id": "decimals",
                "value": 3
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 18,
        "y": 10
      },
      "id": 16,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "value"
      },
      "pluginVersion": "8.3.3",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_AGGREGATOR}"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select ((current_value - total_cost) / total_cost) as percent_gl, (current_value - total_cost) as total_gl\r\nfrom (\r\n    select SUM(total_cost) as total_cost, SUM(quantity * price) as current_value\r\n    from (\r\n        select trades.symbol, SUM(quantity) as quantity, SUM(quantity * lots.price) as total_cost\r\n        from trades\r\n        join lots on lots.id=trades.lot_id\r\n        where trades.date < '${__to:date}'\r\n        group by trades.symbol\r\n    ) as interm\r\n    join (\r\n        select distinct on (symbol) symbol, adjusted_close as price\r\n        from market\r\n        where date <= '${__to:date}'\r\n        order by symbol, date DESC\r\n    ) as current_prices\r\n    on interm.symbol=current_prices.symbol\r\n    where quantity > 0\r\n) as calcd\r\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "price"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "market",
          "timeColumn": "\"timestamp\"",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "ROI",
      "type": "stat"
    },
    {
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "color-text",
            "minWidth": 50
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#ccccdc",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byRegexp",
              "options": ".*(\\%|Impact).*"
            },
            "properties": [
              {
                "id": "unit",
                "value": "percentunit"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": ".*\\$.*"
            },
            "properties": [
              {
                "id": "unit",
                "value": "currencyUSD"
              },
              {
                "id": "decimals",
                "value": 2
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": ".*(Î”|Impact).*"
            },
            "properties": [
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "from": 0.01,
                      "result": {
                        "color": "green",
                        "index": 0
                      },
                      "to": 14000000000
                    },
                    "type": "range"
                  },
                  {
                    "options": {
                      "from": -14000000000,
                      "result": {
                        "color": "red",
                        "index": 1
                      },
                      "to": -0.01
                    },
                    "type": "range"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Symbol"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": false,
                    "title": "See on Y! Finance",
                    "url": "https://finance.yahoo.com/quote/${__value.text}"
                  }
                ]
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 18
      },
      "id": 18,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "%Î” per share"
          }
        ]
      },
      "pluginVersion": "8.3.3",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_AGGREGATOR}"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with total as (\r\n    select SUM(quantity) as qty\r\n    from trades\r\n    where date <= '${__to:date}'\r\n)\r\n\r\nselect symbol as \"Symbol\", (percent_change * quantity / total.qty) as \"Impact\", percent_change as \"%Î”\", change_per_share as \"$Î” per share\", total_change as \"Total $Î”\"\r\nfrom (\r\n  select symbol, quantity,((current_value - total_cost) / total_cost) as percent_change, (current_price_per_share - avg_cost_per_share) as change_per_share, (current_value - total_cost) as total_change\r\n  from (\r\n      select interm.symbol, quantity, total as total_cost, (quantity * price) as current_value, (total / quantity) as avg_cost_per_share, price as current_price_per_share\r\n      from (\r\n          select trades.symbol, SUM(quantity) as quantity, SUM(quantity * lots.price) as total\r\n          from trades\r\n          join lots on lots.id=trades.lot_id\r\n          where trades.date <= '${__to:date}'\r\n          group by trades.symbol\r\n      ) as interm\r\n      join (\r\n          select distinct on (symbol) symbol, adjusted_close as price\r\n          from market\r\n          where date <= '${__to:date}'\r\n          order by symbol, date DESC\r\n      ) as current_prices\r\n      on interm.symbol=current_prices.symbol\r\n      where quantity > 0\r\n  ) as calcd\r\n) as calcd2 , total\r\norder by \"Impact\" desc",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "price"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "market",
          "timeColumn": "\"timestamp\"",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Deltas",
      "type": "table"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 26
      },
      "id": 12,
      "panels": [],
      "title": "Cash Flow",
      "type": "row"
    },
    {
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "decimals": 3,
          "links": [
            {
              "title": "",
              "url": "https://finance.yahoo.com/quote/${__data.fields.symbol}"
            }
          ],
          "mappings": [],
          "unit": "currencyUSD"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 0,
        "y": 27
      },
      "id": 28,
      "options": {
        "displayLabels": [],
        "legend": {
          "displayMode": "table",
          "placement": "right",
          "values": [
            "percent"
          ]
        },
        "pieType": "pie",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": true
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_AGGREGATOR}"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select shares.symbol, quantity * adjusted_close\r\nfrom (\r\n  select symbol, quantity\r\n  from (\r\n    select symbol, SUM(quantity) as quantity\r\n    from trades\r\n    where date < '${__to:date}'\r\n    group by symbol\r\n  ) as totals\r\n  where quantity > 0\r\n) as shares\r\njoin (\r\n  select distinct on (symbol) symbol, adjusted_close\r\n  from market\r\n  where date < '${__to:date}'\r\n  order by symbol, date DESC\r\n) as current_prices\r\non shares.symbol = current_prices.symbol",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "price"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "market",
          "timeColumn": "\"timestamp\"",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "ðŸš§[WIP] ExpensesðŸš§",
      "type": "piechart"
    },
    {
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "max": 65,
          "thresholds": {
            "mode": "percentage",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              },
              {
                "color": "#EAB839",
                "value": 100
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 6,
        "y": 27
      },
      "id": 22,
      "options": {
        "displayMode": "gradient",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": true
        },
        "showUnfilled": true,
        "text": {}
      },
      "pluginVersion": "8.3.3",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_AGGREGATOR}"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT symbol, sum(price)\nFROM trades\nWHERE date < '${__to:date}'\ngroup by symbol",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "price"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "market",
          "timeColumn": "\"timestamp\"",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "ðŸš§[WIP] BudgetðŸš§",
      "type": "bargauge"
    },
    {
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 35
      },
      "id": 10,
      "title": "Debt",
      "type": "row"
    },
    {
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "decimals": 3,
          "links": [
            {
              "title": "",
              "url": "https://finance.yahoo.com/quote/${__data.fields.symbol}"
            }
          ],
          "mappings": [],
          "unit": "currencyUSD"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 0,
        "y": 36
      },
      "id": 29,
      "options": {
        "displayLabels": [],
        "legend": {
          "displayMode": "table",
          "placement": "right",
          "values": [
            "percent"
          ]
        },
        "pieType": "pie",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": true
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_AGGREGATOR}"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select shares.symbol, quantity * adjusted_close\r\nfrom (\r\n  select symbol, quantity\r\n  from (\r\n    select symbol, SUM(quantity) as quantity\r\n    from trades\r\n    where date < '${__to:date}'\r\n    group by symbol\r\n  ) as totals\r\n  where quantity > 0\r\n) as shares\r\njoin (\r\n  select distinct on (symbol) symbol, adjusted_close\r\n  from market\r\n  where date < '${__to:date}'\r\n  order by symbol, date DESC\r\n) as current_prices\r\non shares.symbol = current_prices.symbol",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "price"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "market",
          "timeColumn": "\"timestamp\"",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "ðŸš§[WIP] BreakdownðŸš§",
      "type": "piechart"
    },
    {
      "description": "Amount invested vs Portfolio Value",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisGridShow": false,
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 37,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 3,
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "currencyUSD"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Amount Invested"
            },
            "properties": [
              {
                "id": "custom.lineInterpolation",
                "value": "stepAfter"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "semi-dark-red",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.fillOpacity",
                "value": 6
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Portfolio Value"
            },
            "properties": [
              {
                "id": "custom.lineInterpolation",
                "value": "linear"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 6,
        "y": 36
      },
      "id": 35,
      "options": {
        "legend": {
          "calcs": [
            "last"
          ],
          "displayMode": "table",
          "placement": "right"
        },
        "tooltip": {
          "mode": "multi"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_AGGREGATOR}"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select time, amount as \"Amount Invested\"\r\nfrom (\r\n    select time_bucket_gapfill('1 day', date) as time, locf(max(value)) as amount\r\n    from (\r\n      select date, SUM(invested) over (order by date) as value\r\n      from (\r\n        select trades.date, SUM(trades.quantity * lots.price) as invested\r\n        from trades\r\n        join lots on lots.id=trades.lot_id\r\n        where trades.date < '${__to:date}'\r\n        group by trades.date\r\n        order by trades.date\r\n      ) as invested_over_time\r\n    ) as cumulative\r\n    where date between '${epoch:date}' and '${__to:date}'\r\n    group by time\r\n    order by time\r\n) as history\r\nwhere $__timeFilter(time)",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "price"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "market",
          "timeColumn": "\"timestamp\"",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_AGGREGATOR}"
          },
          "format": "time_series",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select time, value as \"Portfolio Value\"\r\nfrom (\r\n    select time, sum(qty * price) as value\r\n    from (\r\n        select time_bucket_gapfill('1 day', date) as time, symbol, locf(min(qty)) as qty\r\n        from (\r\n            select date, symbol, SUM(quantity) over (partition by symbol order by date) as qty\r\n            from trades\r\n            where date < '${__to:date}'\r\n            order by date\r\n        ) as cumulatives\r\n        where date between '${epoch:date}' and '${__to:date}'\r\n        group by time, symbol\r\n        order by time\r\n    ) as assets\r\n    join (\r\n      select time_bucket_gapfill('1 day', date) as gapfill_date, symbol, locf(min(adjusted_close)) as price\r\n      from market\r\n      where date between '${epoch:date}' and '${__to:date}'\r\n      group by gapfill_date, symbol\r\n      order by gapfill_date\r\n    ) as extended_market\r\n    on assets.symbol=extended_market.symbol and assets.time=extended_market.gapfill_date\r\n    where qty is not null\r\n    group by time\r\n    order by time\r\n) as history\r\nwhere $__timeFilter(time)",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "price"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "market",
          "timeColumn": "\"timestamp\"",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "ðŸš§[WIP] Cost of DebtðŸš§",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 44
      },
      "id": 8,
      "panels": [],
      "title": "Retirement",
      "type": "row"
    },
    {
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "decimals": 3,
          "links": [
            {
              "title": "",
              "url": "https://finance.yahoo.com/quote/${__data.fields.symbol}"
            }
          ],
          "mappings": [],
          "unit": "currencyUSD"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 0,
        "y": 45
      },
      "id": 30,
      "options": {
        "displayLabels": [],
        "legend": {
          "displayMode": "table",
          "placement": "right",
          "values": [
            "percent"
          ]
        },
        "pieType": "pie",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": true
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_AGGREGATOR}"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select shares.symbol, quantity * adjusted_close\r\nfrom (\r\n  select symbol, quantity\r\n  from (\r\n    select symbol, SUM(quantity) as quantity\r\n    from trades\r\n    where date < '${__to:date}'\r\n    group by symbol\r\n  ) as totals\r\n  where quantity > 0\r\n) as shares\r\njoin (\r\n  select distinct on (symbol) symbol, adjusted_close\r\n  from market\r\n  where date < '${__to:date}'\r\n  order by symbol, date DESC\r\n) as current_prices\r\non shares.symbol = current_prices.symbol",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "price"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "market",
          "timeColumn": "\"timestamp\"",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "ðŸš§[WIP] AllocationsðŸš§",
      "type": "piechart"
    },
    {
      "description": "Amount invested vs Portfolio Value",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisGridShow": false,
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 37,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 3,
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "currencyUSD"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Amount Invested"
            },
            "properties": [
              {
                "id": "custom.lineInterpolation",
                "value": "stepAfter"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "semi-dark-red",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.fillOpacity",
                "value": 6
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Portfolio Value"
            },
            "properties": [
              {
                "id": "custom.lineInterpolation",
                "value": "linear"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 6,
        "y": 45
      },
      "id": 32,
      "options": {
        "legend": {
          "calcs": [
            "last"
          ],
          "displayMode": "table",
          "placement": "right"
        },
        "tooltip": {
          "mode": "multi"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_AGGREGATOR}"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select time, amount as \"Amount Invested\"\r\nfrom (\r\n    select time_bucket_gapfill('1 day', date) as time, locf(max(value)) as amount\r\n    from (\r\n      select date, SUM(invested) over (order by date) as value\r\n      from (\r\n        select trades.date, SUM(trades.quantity * lots.price) as invested\r\n        from trades\r\n        join lots on lots.id=trades.lot_id\r\n        where trades.date < '${__to:date}'\r\n        group by trades.date\r\n        order by trades.date\r\n      ) as invested_over_time\r\n    ) as cumulative\r\n    where date between '${epoch:date}' and '${__to:date}'\r\n    group by time\r\n    order by time\r\n) as history\r\nwhere $__timeFilter(time)",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "price"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "market",
          "timeColumn": "\"timestamp\"",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_AGGREGATOR}"
          },
          "format": "time_series",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select time, value as \"Portfolio Value\"\r\nfrom (\r\n    select time, sum(qty * price) as value\r\n    from (\r\n        select time_bucket_gapfill('1 day', date) as time, symbol, locf(min(qty)) as qty\r\n        from (\r\n            select date, symbol, SUM(quantity) over (partition by symbol order by date) as qty\r\n            from trades\r\n            where date < '${__to:date}'\r\n            order by date\r\n        ) as cumulatives\r\n        where date between '${epoch:date}' and '${__to:date}'\r\n        group by time, symbol\r\n        order by time\r\n    ) as assets\r\n    join (\r\n      select time_bucket_gapfill('1 day', date) as gapfill_date, symbol, locf(min(adjusted_close)) as price\r\n      from market\r\n      where date between '${epoch:date}' and '${__to:date}'\r\n      group by gapfill_date, symbol\r\n      order by gapfill_date\r\n    ) as extended_market\r\n    on assets.symbol=extended_market.symbol and assets.time=extended_market.gapfill_date\r\n    where qty is not null\r\n    group by time\r\n    order by time\r\n) as history\r\nwhere $__timeFilter(time)",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "price"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "market",
          "timeColumn": "\"timestamp\"",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "ðŸš§[WIP] Portfolio PerformanceðŸš§",
      "type": "timeseries"
    },
    {
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red",
                "value": null
              },
              {
                "color": "blue",
                "value": 0
              },
              {
                "color": "green",
                "value": 0.01
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "percent_gl"
            },
            "properties": [
              {
                "id": "unit",
                "value": "percentunit"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "total_gl"
            },
            "properties": [
              {
                "id": "unit",
                "value": "currencyUSD"
              },
              {
                "id": "decimals",
                "value": 3
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 18,
        "y": 45
      },
      "id": 33,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "value"
      },
      "pluginVersion": "8.3.3",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_AGGREGATOR}"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select ((current_value - total_cost) / total_cost) as percent_gl, (current_value - total_cost) as total_gl\r\nfrom (\r\n    select SUM(total_cost) as total_cost, SUM(quantity * price) as current_value\r\n    from (\r\n        select trades.symbol, SUM(quantity) as quantity, SUM(quantity * lots.price) as total_cost\r\n        from trades\r\n        join lots on lots.id=trades.lot_id\r\n        where trades.date < '${__to:date}'\r\n        group by trades.symbol\r\n    ) as interm\r\n    join (\r\n        select distinct on (symbol) symbol, adjusted_close as price\r\n        from market\r\n        where date <= '${__to:date}'\r\n        order by symbol, date DESC\r\n    ) as current_prices\r\n    on interm.symbol=current_prices.symbol\r\n    where quantity > 0\r\n) as calcd\r\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "price"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "market",
          "timeColumn": "\"timestamp\"",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "ðŸš§[WIP] ROIðŸš§",
      "type": "stat"
    },
    {
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "color-text",
            "minWidth": 50
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#ccccdc",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byRegexp",
              "options": ".*(\\%|Impact).*"
            },
            "properties": [
              {
                "id": "unit",
                "value": "percentunit"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": ".*\\$.*"
            },
            "properties": [
              {
                "id": "unit",
                "value": "currencyUSD"
              },
              {
                "id": "decimals",
                "value": 2
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": ".*(Î”|Impact).*"
            },
            "properties": [
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "from": 0.01,
                      "result": {
                        "color": "green",
                        "index": 0
                      },
                      "to": 14000000000
                    },
                    "type": "range"
                  },
                  {
                    "options": {
                      "from": -14000000000,
                      "result": {
                        "color": "red",
                        "index": 1
                      },
                      "to": -0.01
                    },
                    "type": "range"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Symbol"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": false,
                    "title": "See on Y! Finance",
                    "url": "https://finance.yahoo.com/quote/${__value.text}"
                  }
                ]
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 53
      },
      "id": 34,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "%Î” per share"
          }
        ]
      },
      "pluginVersion": "8.3.3",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "${DS_AGGREGATOR}"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with total as (\r\n    select SUM(quantity) as qty\r\n    from trades\r\n    where date <= '${__to:date}'\r\n)\r\n\r\nselect symbol as \"Symbol\", (percent_change * quantity / total.qty) as \"Impact\", percent_change as \"%Î”\", change_per_share as \"$Î” per share\", total_change as \"Total $Î”\"\r\nfrom (\r\n  select symbol, quantity,((current_value - total_cost) / total_cost) as percent_change, (current_price_per_share - avg_cost_per_share) as change_per_share, (current_value - total_cost) as total_change\r\n  from (\r\n      select interm.symbol, quantity, total as total_cost, (quantity * price) as current_value, (total / quantity) as avg_cost_per_share, price as current_price_per_share\r\n      from (\r\n          select trades.symbol, SUM(quantity) as quantity, SUM(quantity * lots.price) as total\r\n          from trades\r\n          join lots on lots.id=trades.lot_id\r\n          where trades.date <= '${__to:date}'\r\n          group by trades.symbol\r\n      ) as interm\r\n      join (\r\n          select distinct on (symbol) symbol, adjusted_close as price\r\n          from market\r\n          where date <= '${__to:date}'\r\n          order by symbol, date DESC\r\n      ) as current_prices\r\n      on interm.symbol=current_prices.symbol\r\n      where quantity > 0\r\n  ) as calcd\r\n) as calcd2 , total\r\norder by \"Impact\" desc",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "price"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "market",
          "timeColumn": "\"timestamp\"",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "ðŸš§[WIP] DeltasðŸš§",
      "type": "table"
    }
  ],
  "refresh": "",
  "schemaVersion": 34,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "hide": 2,
        "name": "epoch",
        "query": "${VAR_EPOCH}",
        "skipUrlSync": false,
        "type": "constant",
        "current": {
          "value": "${VAR_EPOCH}",
          "text": "${VAR_EPOCH}",
          "selected": false
        },
        "options": [
          {
            "value": "${VAR_EPOCH}",
            "text": "${VAR_EPOCH}",
            "selected": false
          }
        ]
      }
    ]
  },
  "time": {
    "from": "now/M",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "AggreGator",
  "uid": "KpjeFsTnk",
  "version": 72,
  "weekStart": ""
}
